version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///src/database/app.db
    volumes:
      - .:/app
      - ./src/database:/app/src/database
    depends_on:
      - redis
    env_file:
      - .env

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///src/database/app.db
    volumes:
      - .:/app
      - ./src/database:/app/src/database
    depends_on:
      - redis
      - backend
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: celery -A src.celery_app beat --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///src/database/app.db
    volumes:
      - .:/app
      - ./src/database:/app/src/database
    depends_on:
      - redis
      - backend
    env_file:
      - .env

volumes:
  redis_data:

